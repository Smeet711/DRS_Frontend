{
  "version": 3,
  "sources": ["../../src/DarkModeToggle.tsx", "../../src/hooks/useIsTransitionDisabled.ts", "../../src/hooks/useFirstMountState.ts", "../../src/hooks/usePrevious.ts", "../../src/style.ts"],
  "sourcesContent": ["import * as React from 'react';\nimport { useIsTransitionDisabled } from './hooks/useIsTransitionDisabled';\nimport { TOGGLE_TRANSITION_DURATION, StyledDarkModeToggle } from './style';\n\nexport type Mode = 'dark' | 'light';\n\nexport type Size = 'sm' | 'md' | 'lg';\n\nexport interface StyledProps {\n  size?: Size;\n  inactiveLabelColor?: string;\n  inactiveLabelColorOnHover?: string;\n  inactiveLabelColorOnActive?: string;\n  activeLabelColor?: string;\n  activeLabelColorOnHover?: string;\n  activeLabelColorOnActive?: string;\n  inactiveTrackColor?: string;\n  inactiveTrackColorOnHover?: string;\n  inactiveTrackColorOnActive?: string;\n  activeTrackColor?: string;\n  activeTrackColorOnHover?: string;\n  activeTrackColorOnActive?: string;\n  inactiveThumbColor?: string;\n  activeThumbColor?: string;\n  focusRingColor?: string;\n}\n\nexport interface AccessibilityProps {\n  ariaLabel?: string;\n}\n\nexport interface Props extends StyledProps, AccessibilityProps {\n  mode?: Mode;\n  dark?: string;\n  light?: string;\n  onChange?: (mode: Mode) => void;\n}\n\nexport function DarkModeToggle({\n  mode = 'dark',\n  dark,\n  light,\n  onChange,\n  size = 'sm',\n  inactiveLabelColor = '#b9bdc1',\n  inactiveLabelColorOnHover = '#fcfefe',\n  inactiveLabelColorOnActive = '#cdd1d5',\n  activeLabelColor = '#5b5e62',\n  activeLabelColorOnHover = '#404346',\n  activeLabelColorOnActive = '#010101',\n  inactiveTrackColor = '#dce0e3',\n  inactiveTrackColorOnHover = '#fcfefe',\n  inactiveTrackColorOnActive = '#cdd1d5',\n  activeTrackColor = '#404346',\n  activeTrackColorOnHover = '#2d2f31',\n  activeTrackColorOnActive = '#141516',\n  inactiveThumbColor = '#2d2f31',\n  activeThumbColor = '#dce0e3',\n  focusRingColor = 'rgb(59 130 246 / 0.5)',\n  ariaLabel,\n}: Props) {\n  const isTransitionDisabled = useIsTransitionDisabled(\n    size,\n    TOGGLE_TRANSITION_DURATION\n  );\n\n  return (\n    <StyledDarkModeToggle\n      size={size}\n      inactiveLabelColor={inactiveLabelColor}\n      inactiveLabelColorOnHover={inactiveLabelColorOnHover}\n      inactiveLabelColorOnActive={inactiveLabelColorOnActive}\n      activeLabelColor={activeLabelColor}\n      activeLabelColorOnHover={activeLabelColorOnHover}\n      activeLabelColorOnActive={activeLabelColorOnActive}\n      inactiveTrackColor={inactiveTrackColor}\n      inactiveTrackColorOnHover={inactiveTrackColorOnHover}\n      inactiveTrackColorOnActive={inactiveTrackColorOnActive}\n      activeTrackColor={activeTrackColor}\n      activeTrackColorOnHover={activeTrackColorOnHover}\n      activeTrackColorOnActive={activeTrackColorOnActive}\n      inactiveThumbColor={inactiveThumbColor}\n      activeThumbColor={activeThumbColor}\n      focusRingColor={focusRingColor}\n      data-transition-disabled={isTransitionDisabled}\n      data-checked={mode === 'light'}\n      data-testid=\"dark-mode-toggle\"\n    >\n      {dark && (\n        <span\n          onClick={() => {\n            onChange?.('dark');\n          }}\n          aria-hidden=\"true\"\n        >\n          {dark}\n        </span>\n      )}\n      <input\n        type=\"checkbox\"\n        role=\"switch\"\n        checked={mode === 'light'}\n        aria-label={ariaLabel}\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n          onChange?.(event.target.checked ? 'light' : 'dark');\n        }}\n      />\n      {light && (\n        <span\n          onClick={() => {\n            onChange?.('light');\n          }}\n          aria-hidden=\"true\"\n        >\n          {light}\n        </span>\n      )}\n    </StyledDarkModeToggle>\n  );\n}\n", "import { useEffect, useRef, useState } from 'react';\nimport { useFirstMountState } from './useFirstMountState';\nimport { usePrevious } from './usePrevious';\n\nexport function useIsTransitionDisabled<T>(\n  state: T,\n  defaultTransitionDurationInMs: number\n): boolean {\n  const isFirstMount = useFirstMountState();\n  const previousState = usePrevious(state);\n  const [isTransitionDisabled, setIsTransitionDisabled] =\n    useState<boolean>(false);\n  const timeoutId = useRef<ReturnType<typeof setTimeout>>();\n\n  useEffect(() => {\n    if (state !== previousState) {\n      setIsTransitionDisabled(true);\n      if (timeoutId.current) {\n        clearTimeout(timeoutId.current);\n      }\n      timeoutId.current = setTimeout(() => {\n        setIsTransitionDisabled(false);\n        timeoutId.current = undefined;\n      }, defaultTransitionDurationInMs);\n    }\n  }, [state, previousState, defaultTransitionDurationInMs]);\n\n  if (isFirstMount) {\n    return true;\n  }\n\n  return isTransitionDisabled;\n}\n", "import { useRef } from 'react';\n\nexport function useFirstMountState(): boolean {\n  const isFirst = useRef(true);\n\n  if (isFirst.current) {\n    isFirst.current = false;\n    return true;\n  }\n\n  return isFirst.current;\n}\n", "import { useEffect, useRef } from 'react';\n\nexport function usePrevious<T>(state: T): T | undefined {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    ref.current = state;\n  });\n\n  return ref.current;\n}\n", "import styled from '@emotion/styled';\nimport type { Size, StyledProps } from './DarkModeToggle';\n\nexport const TOGGLE_TRANSITION_DURATION = 250;\n\nfunction sizeToScale(size: Size): number {\n  switch (size) {\n    case 'sm':\n      return 1;\n    case 'md':\n      return 1.5;\n    case 'lg':\n      return 2;\n  }\n}\n\nexport const StyledDarkModeToggle = styled.div<Required<StyledProps>>`\n  display: inline-flex;\n  align-items: center;\n  user-select: none;\n  -webkit-tap-highlight-color: transparent;\n\n  span {\n    transition: color ${TOGGLE_TRANSITION_DURATION}ms ease-in-out;\n    padding: ${(props) => 8 * sizeToScale(props.size)}px\n      ${(props) => 12 * sizeToScale(props.size)}px;\n    cursor: pointer;\n    font-size: ${(props) => 12 * sizeToScale(props.size)}px;\n    font-weight: 600;\n    text-transform: uppercase;\n\n    &:nth-of-type(1) {\n      &:hover {\n        color: ${(props) => props.activeLabelColorOnHover};\n      }\n\n      &:active {\n        color: ${(props) => props.activeLabelColorOnActive};\n      }\n    }\n\n    &:nth-of-type(2) {\n      &:hover {\n        color: ${(props) => props.inactiveLabelColorOnHover};\n      }\n\n      &:active {\n        color: ${(props) => props.inactiveLabelColorOnActive};\n      }\n    }\n  }\n\n  input {\n    position: relative;\n    overflow: hidden;\n    transition: all ${TOGGLE_TRANSITION_DURATION}ms ease-in-out;\n    transition-property: box-shadow, background-color;\n    appearance: none;\n    margin: 0;\n    outline: none;\n    border-radius: ${(props) => 14 * sizeToScale(props.size)}px;\n    width: ${(props) => 48 * sizeToScale(props.size)}px;\n    height: ${(props) => 28 * sizeToScale(props.size)}px;\n    background-color: ${(props) => props.inactiveTrackColor};\n    cursor: pointer;\n    user-select: none;\n\n    &:checked {\n      background-color: ${(props) => props.activeTrackColor};\n\n      &:hover,\n      &:hover::after {\n        background-color: ${(props) => props.activeTrackColorOnHover};\n      }\n\n      &:active,\n      &:active::after {\n        background-color: ${(props) => props.activeTrackColorOnActive};\n      }\n\n      &::before {\n        left: ${(props) => 24 * sizeToScale(props.size)}px;\n        background-color: ${(props) => props.activeThumbColor};\n      }\n\n      &::after {\n        top: ${(props) => 12 * sizeToScale(props.size)}px;\n        right: ${(props) => 2 * sizeToScale(props.size)}px;\n        width: ${(props) => 1 * sizeToScale(props.size)}px;\n        height: ${(props) => 1 * sizeToScale(props.size)}px;\n        border-radius: ${(props) => 0.5 * sizeToScale(props.size)}px;\n        background-color: ${(props) => props.activeTrackColor};\n      }\n    }\n\n    &:hover,\n    &:hover::after {\n      background-color: ${(props) => props.inactiveTrackColorOnHover};\n    }\n\n    &:focus,\n    &:focus-visible {\n      box-shadow: 0 0 0 ${(props) => 2 * sizeToScale(props.size)}px\n        ${(props) => props.focusRingColor};\n    }\n\n    &:focus:not(:focus-visible) {\n      box-shadow: none;\n    }\n\n    &:active,\n    &:active::after {\n      background-color: ${(props) => props.inactiveTrackColorOnActive};\n    }\n\n    &::before {\n      content: '';\n      position: absolute;\n      top: ${(props) => 4 * sizeToScale(props.size)}px;\n      left: ${(props) => 4 * sizeToScale(props.size)}px;\n      display: block;\n      transition: all ${TOGGLE_TRANSITION_DURATION}ms ease-in-out;\n      transition-property: left, background-color;\n      width: ${(props) => 20 * sizeToScale(props.size)}px;\n      height: ${(props) => 20 * sizeToScale(props.size)}px;\n      border-radius: ${(props) => 12 * sizeToScale(props.size)}px;\n      background-color: ${(props) => props.inactiveThumbColor};\n    }\n\n    &::after {\n      content: '';\n      position: absolute;\n      top: ${(props) => -2 * sizeToScale(props.size)}px;\n      right: ${(props) => 2 * sizeToScale(props.size)}px;\n      display: block;\n      transition: all ${TOGGLE_TRANSITION_DURATION}ms ease-in-out;\n      transition-property: top, right, width, height, border-radius,\n        background-color;\n      width: ${(props) => 32 * sizeToScale(props.size)}px;\n      height: ${(props) => 32 * sizeToScale(props.size)}px;\n      border-radius: ${(props) => 16 * sizeToScale(props.size)}px;\n      background-color: ${(props) => props.inactiveTrackColor};\n    }\n  }\n\n  &[data-checked='false'] {\n    span {\n      color: ${(props) => props.inactiveLabelColor};\n\n      &:nth-of-type(1) {\n        pointer-events: none;\n      }\n    }\n  }\n\n  &[data-checked='true'] {\n    span {\n      color: ${(props) => props.activeLabelColor};\n\n      &:nth-of-type(2) {\n        pointer-events: none;\n      }\n    }\n  }\n\n  &[data-transition-disabled='true'] {\n    *,\n    *::before,\n    *::after {\n      transition-duration: 0ms;\n    }\n  }\n`;\n"],
  "mappings": "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",
  "names": []
}
