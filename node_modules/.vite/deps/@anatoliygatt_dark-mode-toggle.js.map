{
  "version": 3,
  "sources": ["../../@anatoliygatt/dark-mode-toggle/src/DarkModeToggle.tsx", "../../@anatoliygatt/dark-mode-toggle/src/hooks/useIsTransitionDisabled.ts", "../../@anatoliygatt/dark-mode-toggle/src/hooks/useFirstMountState.ts", "../../@anatoliygatt/dark-mode-toggle/src/hooks/usePrevious.ts", "../../@anatoliygatt/dark-mode-toggle/src/style.ts"],
  "sourcesContent": ["import * as React from 'react';\nimport { useIsTransitionDisabled } from './hooks/useIsTransitionDisabled';\nimport { TOGGLE_TRANSITION_DURATION, StyledDarkModeToggle } from './style';\n\nexport type Mode = 'dark' | 'light';\n\nexport type Size = 'sm' | 'md' | 'lg';\n\nexport interface StyledProps {\n  size?: Size;\n  inactiveLabelColor?: string;\n  inactiveLabelColorOnHover?: string;\n  inactiveLabelColorOnActive?: string;\n  activeLabelColor?: string;\n  activeLabelColorOnHover?: string;\n  activeLabelColorOnActive?: string;\n  inactiveTrackColor?: string;\n  inactiveTrackColorOnHover?: string;\n  inactiveTrackColorOnActive?: string;\n  activeTrackColor?: string;\n  activeTrackColorOnHover?: string;\n  activeTrackColorOnActive?: string;\n  inactiveThumbColor?: string;\n  activeThumbColor?: string;\n  focusRingColor?: string;\n}\n\nexport interface AccessibilityProps {\n  ariaLabel?: string;\n}\n\nexport interface Props extends StyledProps, AccessibilityProps {\n  mode?: Mode;\n  dark?: string;\n  light?: string;\n  onChange?: (mode: Mode) => void;\n}\n\nexport function DarkModeToggle({\n  mode = 'dark',\n  dark,\n  light,\n  onChange,\n  size = 'sm',\n  inactiveLabelColor = '#b9bdc1',\n  inactiveLabelColorOnHover = '#fcfefe',\n  inactiveLabelColorOnActive = '#cdd1d5',\n  activeLabelColor = '#5b5e62',\n  activeLabelColorOnHover = '#404346',\n  activeLabelColorOnActive = '#010101',\n  inactiveTrackColor = '#dce0e3',\n  inactiveTrackColorOnHover = '#fcfefe',\n  inactiveTrackColorOnActive = '#cdd1d5',\n  activeTrackColor = '#404346',\n  activeTrackColorOnHover = '#2d2f31',\n  activeTrackColorOnActive = '#141516',\n  inactiveThumbColor = '#2d2f31',\n  activeThumbColor = '#dce0e3',\n  focusRingColor = 'rgb(59 130 246 / 0.5)',\n  ariaLabel,\n}: Props) {\n  const isTransitionDisabled = useIsTransitionDisabled(\n    size,\n    TOGGLE_TRANSITION_DURATION\n  );\n\n  return (\n    <StyledDarkModeToggle\n      size={size}\n      inactiveLabelColor={inactiveLabelColor}\n      inactiveLabelColorOnHover={inactiveLabelColorOnHover}\n      inactiveLabelColorOnActive={inactiveLabelColorOnActive}\n      activeLabelColor={activeLabelColor}\n      activeLabelColorOnHover={activeLabelColorOnHover}\n      activeLabelColorOnActive={activeLabelColorOnActive}\n      inactiveTrackColor={inactiveTrackColor}\n      inactiveTrackColorOnHover={inactiveTrackColorOnHover}\n      inactiveTrackColorOnActive={inactiveTrackColorOnActive}\n      activeTrackColor={activeTrackColor}\n      activeTrackColorOnHover={activeTrackColorOnHover}\n      activeTrackColorOnActive={activeTrackColorOnActive}\n      inactiveThumbColor={inactiveThumbColor}\n      activeThumbColor={activeThumbColor}\n      focusRingColor={focusRingColor}\n      data-transition-disabled={isTransitionDisabled}\n      data-checked={mode === 'light'}\n      data-testid=\"dark-mode-toggle\"\n    >\n      {dark && (\n        <span\n          onClick={() => {\n            onChange?.('dark');\n          }}\n          aria-hidden=\"true\"\n        >\n          {dark}\n        </span>\n      )}\n      <input\n        type=\"checkbox\"\n        role=\"switch\"\n        checked={mode === 'light'}\n        aria-label={ariaLabel}\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n          onChange?.(event.target.checked ? 'light' : 'dark');\n        }}\n      />\n      {light && (\n        <span\n          onClick={() => {\n            onChange?.('light');\n          }}\n          aria-hidden=\"true\"\n        >\n          {light}\n        </span>\n      )}\n    </StyledDarkModeToggle>\n  );\n}\n", "import { useEffect, useRef, useState } from 'react';\nimport { useFirstMountState } from './useFirstMountState';\nimport { usePrevious } from './usePrevious';\n\nexport function useIsTransitionDisabled<T>(\n  state: T,\n  defaultTransitionDurationInMs: number\n): boolean {\n  const isFirstMount = useFirstMountState();\n  const previousState = usePrevious(state);\n  const [isTransitionDisabled, setIsTransitionDisabled] =\n    useState<boolean>(false);\n  const timeoutId = useRef<ReturnType<typeof setTimeout>>();\n\n  useEffect(() => {\n    if (state !== previousState) {\n      setIsTransitionDisabled(true);\n      if (timeoutId.current) {\n        clearTimeout(timeoutId.current);\n      }\n      timeoutId.current = setTimeout(() => {\n        setIsTransitionDisabled(false);\n        timeoutId.current = undefined;\n      }, defaultTransitionDurationInMs);\n    }\n  }, [state, previousState, defaultTransitionDurationInMs]);\n\n  if (isFirstMount) {\n    return true;\n  }\n\n  return isTransitionDisabled;\n}\n", "import { useRef } from 'react';\n\nexport function useFirstMountState(): boolean {\n  const isFirst = useRef(true);\n\n  if (isFirst.current) {\n    isFirst.current = false;\n    return true;\n  }\n\n  return isFirst.current;\n}\n", "import { useEffect, useRef } from 'react';\n\nexport function usePrevious<T>(state: T): T | undefined {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    ref.current = state;\n  });\n\n  return ref.current;\n}\n", "import styled from '@emotion/styled';\nimport type { Size, StyledProps } from './DarkModeToggle';\n\nexport const TOGGLE_TRANSITION_DURATION = 250;\n\nfunction sizeToScale(size: Size): number {\n  switch (size) {\n    case 'sm':\n      return 1;\n    case 'md':\n      return 1.5;\n    case 'lg':\n      return 2;\n  }\n}\n\nexport const StyledDarkModeToggle = styled.div<Required<StyledProps>>`\n  display: inline-flex;\n  align-items: center;\n  user-select: none;\n  -webkit-tap-highlight-color: transparent;\n\n  span {\n    transition: color ${TOGGLE_TRANSITION_DURATION}ms ease-in-out;\n    padding: ${(props) => 8 * sizeToScale(props.size)}px\n      ${(props) => 12 * sizeToScale(props.size)}px;\n    cursor: pointer;\n    font-size: ${(props) => 12 * sizeToScale(props.size)}px;\n    font-weight: 600;\n    text-transform: uppercase;\n\n    &:nth-of-type(1) {\n      &:hover {\n        color: ${(props) => props.activeLabelColorOnHover};\n      }\n\n      &:active {\n        color: ${(props) => props.activeLabelColorOnActive};\n      }\n    }\n\n    &:nth-of-type(2) {\n      &:hover {\n        color: ${(props) => props.inactiveLabelColorOnHover};\n      }\n\n      &:active {\n        color: ${(props) => props.inactiveLabelColorOnActive};\n      }\n    }\n  }\n\n  input {\n    position: relative;\n    overflow: hidden;\n    transition: all ${TOGGLE_TRANSITION_DURATION}ms ease-in-out;\n    transition-property: box-shadow, background-color;\n    appearance: none;\n    margin: 0;\n    outline: none;\n    border-radius: ${(props) => 14 * sizeToScale(props.size)}px;\n    width: ${(props) => 48 * sizeToScale(props.size)}px;\n    height: ${(props) => 28 * sizeToScale(props.size)}px;\n    background-color: ${(props) => props.inactiveTrackColor};\n    cursor: pointer;\n    user-select: none;\n\n    &:checked {\n      background-color: ${(props) => props.activeTrackColor};\n\n      &:hover,\n      &:hover::after {\n        background-color: ${(props) => props.activeTrackColorOnHover};\n      }\n\n      &:active,\n      &:active::after {\n        background-color: ${(props) => props.activeTrackColorOnActive};\n      }\n\n      &::before {\n        left: ${(props) => 24 * sizeToScale(props.size)}px;\n        background-color: ${(props) => props.activeThumbColor};\n      }\n\n      &::after {\n        top: ${(props) => 12 * sizeToScale(props.size)}px;\n        right: ${(props) => 2 * sizeToScale(props.size)}px;\n        width: ${(props) => 1 * sizeToScale(props.size)}px;\n        height: ${(props) => 1 * sizeToScale(props.size)}px;\n        border-radius: ${(props) => 0.5 * sizeToScale(props.size)}px;\n        background-color: ${(props) => props.activeTrackColor};\n      }\n    }\n\n    &:hover,\n    &:hover::after {\n      background-color: ${(props) => props.inactiveTrackColorOnHover};\n    }\n\n    &:focus,\n    &:focus-visible {\n      box-shadow: 0 0 0 ${(props) => 2 * sizeToScale(props.size)}px\n        ${(props) => props.focusRingColor};\n    }\n\n    &:focus:not(:focus-visible) {\n      box-shadow: none;\n    }\n\n    &:active,\n    &:active::after {\n      background-color: ${(props) => props.inactiveTrackColorOnActive};\n    }\n\n    &::before {\n      content: '';\n      position: absolute;\n      top: ${(props) => 4 * sizeToScale(props.size)}px;\n      left: ${(props) => 4 * sizeToScale(props.size)}px;\n      display: block;\n      transition: all ${TOGGLE_TRANSITION_DURATION}ms ease-in-out;\n      transition-property: left, background-color;\n      width: ${(props) => 20 * sizeToScale(props.size)}px;\n      height: ${(props) => 20 * sizeToScale(props.size)}px;\n      border-radius: ${(props) => 12 * sizeToScale(props.size)}px;\n      background-color: ${(props) => props.inactiveThumbColor};\n    }\n\n    &::after {\n      content: '';\n      position: absolute;\n      top: ${(props) => -2 * sizeToScale(props.size)}px;\n      right: ${(props) => 2 * sizeToScale(props.size)}px;\n      display: block;\n      transition: all ${TOGGLE_TRANSITION_DURATION}ms ease-in-out;\n      transition-property: top, right, width, height, border-radius,\n        background-color;\n      width: ${(props) => 32 * sizeToScale(props.size)}px;\n      height: ${(props) => 32 * sizeToScale(props.size)}px;\n      border-radius: ${(props) => 16 * sizeToScale(props.size)}px;\n      background-color: ${(props) => props.inactiveTrackColor};\n    }\n  }\n\n  &[data-checked='false'] {\n    span {\n      color: ${(props) => props.inactiveLabelColor};\n\n      &:nth-of-type(1) {\n        pointer-events: none;\n      }\n    }\n  }\n\n  &[data-checked='true'] {\n    span {\n      color: ${(props) => props.activeLabelColor};\n\n      &:nth-of-type(2) {\n        pointer-events: none;\n      }\n    }\n  }\n\n  &[data-transition-disabled='true'] {\n    *,\n    *::before,\n    *::after {\n      transition-duration: 0ms;\n    }\n  }\n`;\n"],
  "mappings": "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",
  "names": []
}
